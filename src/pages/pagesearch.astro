---
/**
 * Page: Page Search (Pagefind UI embedded)
 * Path: /pagesearch
 */

// Components
import Layout from '../layouts/Layout.astro'
import SidebarContent from '../components/blocks/basic/StickySidebar.astro'
import Hero from '../components/blocks/hero/PageHeader.astro'

// SEO
const SEO = {
  title: 'Search Trips',
  description:
    'Find a mission trip by country, region, date, and type. Filter and search across our upcoming opportunities.'
}

// Page Header
const header = {
  title: 'Find a <strong>Mission Trip</strong>',
  text: 'Filter by Region, Country, Leave Date, and Trip Type.'
}
---

<Layout title={SEO.title} description={SEO.description}>
  <Hero title={header.title} text={header.text} />

  <SidebarContent>
    <!-- Sidebar -->
    <div slot="sidebar" class="space-y-4">
      <h3 class="text-xl font-semibold">Tips</h3>
      <ul class="list-disc list-inside text-sm text-muted-foreground space-y-2">
        <li>Use the filters to narrow by Region, Country, or Trip Type.</li>
        <li>Try a keyword in the search box (e.g. “Kenya” or “Teaching English”).</li>
        <li>Click a result to view full trip details.</li>
      </ul>
    </div>

    <!-- Main content -->
    <div class="basic-text">
      <section class="rounded-2xl border border-gray-200/70 dark:border-white/10 bg-white/60 dark:bg-white/5 shadow-sm p-4 sm:p-6 md:p-8">
        <!-- Pagefind UI assets -->
        <link rel="stylesheet" href="/search/pagefind-ui.css" />
        <script src="/search/pagefind-ui.js" is:inline></script>

        <!-- Mount point -->
        <div id="trip-search" class="pagefind-wrapper" tabindex="-1" aria-label="Site search"></div>

        <!-- Interactive, idempotent activation on click/focus/type -->
        <script is:inline>
          (() => {
            const WRAPPER_SEL = '#trip-search';
            const MAX_RETRIES = 10;
            const RETRY_MS = 60;

            let mounting = false;
            let retries = 0;

            function hasUIMounted(wrapper) {
              // Pagefind UI renders a wrapper; this detects an existing mount
              return !!wrapper.querySelector('.pagefind-ui__form, .pagefind-ui__search-input');
            }

            function ensureClickable(node) {
              if (!node) return;
              node.removeAttribute('inert');
              node.style.pointerEvents = 'auto';
              let p = node.parentElement;
              while (p) { p.style.pointerEvents = 'auto'; p = p.parentElement; }
            }

            function mountPagefind(force = false) {
              const wrapper = document.querySelector(WRAPPER_SEL);
              if (!wrapper) return;

              // If already mounted and not forcing, bail
              if (!force && hasUIMounted(wrapper)) return;

              if (mounting) return;
              mounting = true;

              // Clean slate, unlock pointer events
              wrapper.innerHTML = '';
              ensureClickable(wrapper);
              document.querySelectorAll('[inert]').forEach((n) => n.removeAttribute('inert'));

              // Wait for bundle registration if needed
              if (!window.PagefindUI) {
                mounting = false;
                if (retries < MAX_RETRIES) {
                  retries++;
                  return setTimeout(() => mountPagefind(force), RETRY_MS);
                }
                // Give up silently; interaction will try again
                return;
              }

              try {
                new window.PagefindUI({
                  element: WRAPPER_SEL,
                  basePath: '/search/',
                  // translations: { placeholder: 'Search trips…' }
                });
              } catch (e) {
                console.error('Pagefind init error:', e);
              } finally {
                mounting = false;
                retries = 0;

                // Final sanity: make sure the input is interactive
                const input = wrapper.querySelector('.pagefind-ui__search-input');
                ensureClickable(input || wrapper);
              }
            }

            // First try on ready
            if (document.readyState === 'loading') {
              document.addEventListener('DOMContentLoaded', () => mountPagefind(), { once: true });
            } else {
              mountPagefind();
            }

            // Re-mount after Astro client navigations
            window.addEventListener('astro:page-load', () => mountPagefind(true));
            window.addEventListener('astro:after-swap', () => mountPagefind(true));

            // Re-mount when restored from BFCache (back/forward)
            window.addEventListener('pageshow', (e) => {
              if (e.persisted) mountPagefind(true);
            });

            // Interaction-based activation: any click/focus/type triggers mount
            const wrapper = document.querySelector(WRAPPER_SEL);
            if (wrapper) {
              const trigger = () => mountPagefind();
              wrapper.addEventListener('pointerdown', trigger, { passive: true });
              wrapper.addEventListener('focus', trigger, { passive: true, capture: true });
              wrapper.addEventListener('keydown', trigger, { capture: true });
            }
          })();
        </script>
      </section>
    </div>
  </SidebarContent>
</Layout>

<style is:global>
  /* Dark-mode readability */
  html.dark .pagefind-wrapper,
  @media (prefers-color-scheme: dark) {
    html:not(.dark) .pagefind-wrapper { /* noop */ }
  }

  html.dark .pagefind-wrapper .pagefind-ui__form,
  html.dark .pagefind-wrapper .pagefind-ui__drawer,
  html.dark .pagefind-wrapper .pagefind-ui__results-area {
    background: transparent;
    color: #e5e7eb; /* zinc-200 */
    border-color: rgba(255,255,255,0.12);
  }

  html.dark .pagefind-wrapper .pagefind-ui__search-input {
    background: rgba(255,255,255,0.06);
    color: #e5e7eb;
    border: 1px solid rgba(255,255,255,0.12);
    caret-color: #bfdbfe; /* sky-200 */
  }
  html.dark .pagefind-wrapper .pagefind-ui__search-input::placeholder {
    color: rgba(229,231,235,0.85) !important;
  }

  html.dark .pagefind-wrapper .pagefind-ui__label,
  html.dark .pagefind-wrapper label[for^="pagefind-"],
  html.dark .pagefind-wrapper .pagefind-ui__search-icon {
    color: #e5e7eb !important;
    fill: currentColor !important;
    stroke: currentColor !important;
    opacity: 0.95;
  }

  html.dark .pagefind-wrapper .pagefind-ui__button,
  html.dark .pagefind-wrapper .pagefind-ui__filter-pill,
  html.dark .pagefind-wrapper .pagefind-ui__filter-link {
    background: rgba(255,255,255,0.06);
    color: #e5e7eb;
    border: 1px solid rgba(255,255,255,0.12);
  }

  /* Result titles */
  html.dark .pagefind-wrapper {
    --pf-title: #e5e7eb;
    --pf-title-hover: #bfdbfe;
  }
  html.dark .pagefind-wrapper .pagefind-ui__result-title,
  html.dark .pagefind-wrapper .pagefind-ui__result-title *,
  html.dark .pagefind-wrapper .pagefind-ui__result-link {
    color: var(--pf-title) !important;
  }
  html.dark .pagefind-wrapper .pagefind-ui__result-title a:is(:link,:visited,:active) {
    color: var(--pf-title) !important;
    text-decoration: none;
  }
  html.dark .pagefind-wrapper .pagefind-ui__result-title a:is(:hover,:focus-visible),
  html.dark .pagefind-wrapper .pagefind-ui__result-link:is(:hover,:focus-visible) {
    color: var(--pf-title-hover) !important;
    text-decoration: underline;
    text-underline-offset: 2px;
  }

  html.dark .pagefind-wrapper .pagefind-ui__result-excerpt,
  html.dark .pagefind-wrapper .pagefind-ui__message {
    color: #e5e7eb;
  }
  html.dark .pagefind-wrapper .pagefind-ui__result {
    background: rgba(255,255,255,0.04);
    border: 1px solid rgba(255,255,255,0.10);
  }

  html.dark .pagefind-wrapper .pagefind-ui__filter-group-title,
  html.dark .pagefind-wrapper .pagefind-ui__filter-count {
    color: #cbd5e1;
  }

  html.dark .pagefind-wrapper .pagefind-ui__result-excerpt mark {
    background: rgba(250,204,21,0.25);
    color: inherit;
    border-radius: 0.25rem;
    padding: 0 .1rem;
  }

  /* Hide the clear (reset) button */
  .pagefind-wrapper .pagefind-ui__reset { display: none !important; }

  /* Defensive: always allow clicks inside the wrapper */
  .pagefind-wrapper, .pagefind-wrapper * { pointer-events: auto; }
</style>