---
/**
 * Page: Page Search (Pagefind UI embedded)
 * Path: /pagesearch
 */

// Components
import Layout from '../layouts/Layout.astro'
import SidebarContent from '../components/blocks/basic/StickySidebar.astro'
import Hero from '../components/blocks/hero/PageHeader.astro'

// SEO
const SEO = {
  title: 'Search Trips',
  description:
    'Find a mission trip by country, region, date, and type. Filter and search across our upcoming opportunities.'
}

// Page Header
const header = {
  title: 'Find a <strong>Mission Trip</strong>',
  text: 'Filter by Region, Country, Leave Date, and Trip Type.'
}
---

<Layout title={SEO.title} description={SEO.description}>
  <Hero title={header.title} text={header.text} />

  <SidebarContent>
    <!-- Sidebar -->
    <div slot="sidebar" class="space-y-4">
      <h3 class="text-xl font-semibold">Tips</h3>
      <ul class="list-disc list-inside text-sm text-muted-foreground space-y-2">
        <li>Use the filters to narrow by Region, Country, or Trip Type.</li>
        <li>Try a keyword in the search box (e.g. “Kenya” or “Teaching English”).</li>
        <li>Click a result to view full trip details.</li>
      </ul>
    </div>

    <!-- Main content -->
    <div class="basic-text">
      <!-- Container that matches your site’s spacing / cards -->
      <section class="rounded-2xl border border-gray-200/70 dark:border-white/10 bg-white/60 dark:bg-white/5 shadow-sm p-4 sm:p-6 md:p-8">
        <!-- Pagefind UI assets -->
        <link rel="stylesheet" href="/search/pagefind-ui.css" />

        <!-- IMPORTANT: force re-execution on client navigations -->
        <script src="/search/pagefind-ui.js" is:inline data-astro-reload></script>

        <!-- Mount point -->
        <div id="trip-search" class="pagefind-wrapper"></div>

        <!-- Robust init (handles page swaps & bfcache) -->
        <script is:inline data-astro-reload>
          (() => {
            const MOUNT_SEL = '#trip-search';
            let mounting = false;

            function removeInert(el) {
              // Remove any accidental inert ancestors (view-transition leftovers)
              let node = el;
              while (node) {
                if (node.hasAttribute && node.hasAttribute('inert')) {
                  node.removeAttribute('inert');
                }
                node = node.parentElement;
              }
            }

            function ensureClickable(el) {
              // Defensively allow pointer events on our UI
              el.style.pointerEvents = 'auto';
              const parent = el.parentElement;
              if (parent) parent.style.pointerEvents = 'auto';
            }

            function mountPagefind() {
              if (mounting) return;
              const el = document.querySelector(MOUNT_SEL);
              if (!el || !window.PagefindUI) return;

              mounting = true;

              // Clean slate
              el.innerHTML = '';
              removeInert(el);
              ensureClickable(el);

              try {
                new window.PagefindUI({
                  element: MOUNT_SEL,
                  basePath: '/search/',
                  // translations: { placeholder: 'Search trips…' }
                });
              } finally {
                // yield to allow DOM to settle then unlock
                setTimeout(() => (mounting = false), 0);
              }
            }

            // First mount
            if (document.readyState === 'loading') {
              document.addEventListener('DOMContentLoaded', mountPagefind, { once: true });
            } else {
              mountPagefind();
            }

            // Re-mount after Astro client navigation events
            window.addEventListener('astro:page-load', mountPagefind);
            window.addEventListener('astro:after-swap', mountPagefind);

            // Re-mount when coming back from bfcache (back/forward)
            window.addEventListener('pageshow', (e) => {
              if (e.persisted) mountPagefind();
            });

            // Safety: if the page becomes visible again and search isn't interactive, try again
            document.addEventListener('visibilitychange', () => {
              if (document.visibilityState === 'visible') mountPagefind();
            });

            // Safety: re-run if the script was loaded before PagefindUI finished registering
            if (!window.PagefindUI) {
              const ready = setInterval(() => {
                if (window.PagefindUI) {
                  clearInterval(ready);
                  mountPagefind();
                }
              }, 50);
              setTimeout(() => clearInterval(ready), 4000);
            }
          })();
        </script>
      </section>
    </div>
  </SidebarContent>
</Layout>

<style is:global>
  /* --- Dark mode + readability --- */
  html.dark .pagefind-wrapper,
  @media (prefers-color-scheme: dark) {
    html:not(.dark) .pagefind-wrapper { /* noop */ }
  }

  /* Containers */
  html.dark .pagefind-wrapper .pagefind-ui__form,
  html.dark .pagefind-wrapper .pagefind-ui__drawer,
  html.dark .pagefind-wrapper .pagefind-ui__results-area {
    background: transparent;
    color: #e5e7eb;
    border-color: rgba(255,255,255,0.12);
  }

  /* Input */
  html.dark .pagefind-wrapper .pagefind-ui__search-input {
    background: rgba(255,255,255,0.06);
    color: #e5e7eb;
    border: 1px solid rgba(255,255,255,0.12);
    caret-color: #bfdbfe;
  }
  html.dark .pagefind-wrapper .pagefind-ui__search-input::placeholder {
    color: rgba(229,231,235,0.85) !important;
  }

  /* Make SEARCH label/icon light */
  html.dark .pagefind-wrapper .pagefind-ui__label,
  html.dark .pagefind-wrapper label[for^="pagefind-"],
  html.dark .pagefind-wrapper .pagefind-ui__search-icon {
    color: #e5e7eb !important;
    fill: currentColor !important;
    stroke: currentColor !important;
    opacity: 0.95;
  }

  /* Buttons / chips */
  html.dark .pagefind-wrapper .pagefind-ui__button,
  html.dark .pagefind-wrapper .pagefind-ui__filter-pill,
  html.dark .pagefind-wrapper .pagefind-ui__filter-link {
    background: rgba(255,255,255,0.06);
    color: #e5e7eb;
    border: 1px solid rgba(255,255,255,0.12);
  }

  /* Strong dark-mode overrides for RESULT TITLES (headings/links) */
  html.dark .pagefind-wrapper {
    --pf-title: #e5e7eb;
    --pf-title-hover: #bfdbfe;
  }
  html.dark .pagefind-wrapper .pagefind-ui__result-title,
  html.dark .pagefind-wrapper .pagefind-ui__result-title *,
  html.dark .pagefind-wrapper .pagefind-ui__result-link {
    color: var(--pf-title) !important;
  }
  html.dark .pagefind-wrapper .pagefind-ui__result-title a:is(:link,:visited,:active) {
    color: var(--pf-title) !important;
    text-decoration: none;
  }
  html.dark .pagefind-wrapper .pagefind-ui__result-title a:is(:hover,:focus-visible),
  html.dark .pagefind-wrapper .pagefind-ui__result-link:is(:hover,:focus-visible) {
    color: var(--pf-title-hover) !important;
    text-decoration: underline;
    text-underline-offset: 2px;
  }

  /* Other result text & cards */
  html.dark .pagefind-wrapper .pagefind-ui__result-excerpt,
  html.dark .pagefind-wrapper .pagefind-ui__message {
    color: #e5e7eb;
  }
  html.dark .pagefind-wrapper .pagefind-ui__result {
    background: rgba(255,255,255,0.04);
    border: 1px solid rgba(255,255,255,0.10);
  }

  /* Facet headers & counts */
  html.dark .pagefind-wrapper .pagefind-ui__filter-group-title,
  html.dark .pagefind-wrapper .pagefind-ui__filter-count {
    color: #cbd5e1;
  }

  /* Highlighted terms */
  html.dark .pagefind-wrapper .pagefind-ui__result-excerpt mark {
    background: rgba(250,204,21,0.25);
    color: inherit;
    border-radius: 0.25rem;
    padding: 0 .1rem;
  }

  /* Hide the clear (reset) button entirely */
  .pagefind-wrapper .pagefind-ui__reset { display: none !important; }

  /* Defensive: ensure the UI is always clickable after client navigations */
  .pagefind-wrapper,
  .pagefind-wrapper * { pointer-events: auto; }
</style>