---
// Signup Modal (Repurposed as Contact Form)
// Keeps Foxi modal overlay, centering, animation.
// Disables submit until required fields are valid (without using a disabled prop).

import Modal from '../../ui/Modal.astro'
import Form from '../../ui/forms/Form.astro'
import FormField from '../../ui/forms/partials/FormField.astro'
import InputField from '../../ui/forms/form-elements/InputField.astro'
import Button from '../../ui/Button.astro'

type Props = { classes?: string }
const { classes } = Astro.props
---

<Modal id="signup" classes={classes} title="Contact Us">
  <div class="mx-auto w-full max-w-xl">
    <p class="mb-6 text-base leading-relaxed">
      Tell us a bit about your enquiry and we'll get back to you.
    </p>

    <Form id="contactForm">
      <FormField>
        <InputField type="text" id="firstName" label="First Name" required />
        <InputField type="text" id="lastName" label="Last Name" />
      </FormField>

      <FormField>
        <InputField type="email" id="email" label="Email" required />
      </FormField>

      <FormField>
        <InputField type="tel" id="phone" label="Phone Number" />
      </FormField>

      <div class="mt-6 text-center">
        <!-- Start visually/interaction disabled via classes; no unsupported props -->
        <Button
          class:list={['js-submit','pointer-events-none','opacity-50']}
          style="primary"
          type="submit"
          size="lg"
        >
          Send Message
        </Button>
      </div>
    </Form>
  </div>
</Modal>

<style>
  /* Keep Foxiâ€™s tidy spacing */
  .modal__body form { @apply space-y-4; }
  .modal__body h2 { @apply text-2xl mb-4; }
  .modal__body p { @apply text-neutral-600 dark:text-neutral-300; }

  /* Smooth popup motion (same feel as Foxi signup) */
  .modal__popup { @apply transition-transform duration-500 ease-out; }
</style>

<script is:inline>
  // Enable the submit button only when the form is valid.
  document.addEventListener('astro:page-load', () => {
    const form = document.getElementById('contactForm');
    if (!form) return;

    const btn =
      form.querySelector('.js-submit') ||
      form.querySelector('button[type="submit"]');

    if (!btn) return;

    const disableBtn = () => {
      btn.classList.add('pointer-events-none','opacity-50');
      btn.setAttribute('aria-disabled','true');
    };
    const enableBtn = () => {
      btn.classList.remove('pointer-events-none','opacity-50');
      btn.setAttribute('aria-disabled','false');
    };

    const syncState = () => {
      form.checkValidity() ? enableBtn() : disableBtn();
    };

    // Initial state + live updates
    syncState();
    form.addEventListener('input', syncState);
    form.addEventListener('change', syncState);

    // Prevent invalid submits (including Enter key)
    form.addEventListener('submit', (e) => {
      if (!form.checkValidity()) {
        e.preventDefault();
        form.reportValidity();
      }
    });
  });
</script>