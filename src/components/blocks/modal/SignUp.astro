---
// Signup Modal (Repurposed as Contact Form)
// Matches Foxi contact page validation and required field behaviour.

import Modal from '../../ui/Modal.astro'
import Form from '../../ui/forms/Form.astro'
import FormField from '../../ui/forms/partials/FormField.astro'
import InputField from '../../ui/forms/form-elements/InputField.astro'
import Button from '../../ui/Button.astro'

type Props = { classes?: string }
const { classes } = Astro.props
---

<Modal id="signup" classes={classes} title="Contact Us">
  <div class="mx-auto w-full max-w-xl">
    <p class="mb-6 text-base leading-relaxed">
      Tell us a bit about your enquiry and we'll get back to you.
    </p>

    <Form id="contactForm">
      <FormField>
        <InputField type="text" id="firstName" label="First Name" required />
        <InputField type="text" id="lastName" label="Last Name" />
      </FormField>

      <FormField>
        <InputField type="email" id="email" label="Email" required />
      </FormField>

      <FormField>
        <InputField type="tel" id="phone" label="Phone Number" />
      </FormField>

      <div class="mt-6 text-center">
        <Button
          class:list={['js-submit','pointer-events-none','opacity-50']}
          style="primary"
          type="submit"
          size="lg"
        >
          Send Message
        </Button>
        <p id="formMsg" class="mt-3 text-sm text-red-500 hidden">
          Please fill all required fields correctly.
        </p>
      </div>
    </Form>
  </div>
</Modal>

<style>
  /* Keep Foxiâ€™s tidy spacing */
  .modal__body form { @apply space-y-4; }
  .modal__body h2 { @apply text-2xl mb-4; }
  .modal__body p { @apply text-neutral-600 dark:text-neutral-300; }

  .modal__popup { @apply transition-transform duration-500 ease-out; }

  /* Let native Foxi validation handle required styling (asterisk + red) */
  input:invalid {
    @apply invalid:border-red-500 invalid:text-red-500 focus:invalid:border-red-500;
  }
  input:valid {
    @apply border-neutral-200 focus:border-primary-500;
  }
</style>

<script is:inline>
  document.addEventListener('astro:page-load', () => {
    const form = document.getElementById('contactForm');
    const btn = form?.querySelector('.js-submit');
    const msg = document.getElementById('formMsg');
    if (!form || !btn) return;

    const disableBtn = () => {
      btn.classList.add('pointer-events-none', 'opacity-50');
      btn.setAttribute('aria-disabled', 'true');
    };
    const enableBtn = () => {
      btn.classList.remove('pointer-events-none', 'opacity-50');
      btn.setAttribute('aria-disabled', 'false');
    };

    const syncState = () => {
      form.checkValidity() ? enableBtn() : disableBtn();
    };

    form.querySelectorAll('input, textarea').forEach((el) => {
      el.addEventListener('input', syncState);
      el.addEventListener('change', syncState);
    });

    syncState();

    form.addEventListener('submit', (e) => {
      if (!form.checkValidity()) {
        e.preventDefault();
        msg.classList.remove('hidden');
        msg.textContent = 'Please fill all required fields correctly.';
      } else {
        msg.classList.add('hidden');
      }
    });

    btn.addEventListener('click', (e) => {
      if (btn.classList.contains('pointer-events-none')) {
        e.preventDefault();
        msg.classList.remove('hidden');
        msg.textContent = 'Please fill all required fields correctly.';
      }
    });
  });
</script>