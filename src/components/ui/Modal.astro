---
// Modal
import Button from './Button.astro'
import { Icon } from 'astro-icon/components'

type Props = { id?: string; title?: string; classes?: string }
const { id, title, classes } = Astro.props
---

<div {...id ? { id } : {}} class:list={['modal', { [`${classes}`]: classes }]}>
  <div class="modal__wrapper">
    <div class="modal__popup">
      <div class="modal__header">
        {title && <h2 class="modal__title">{title}</h2>}
        <Button size="sm" style="neutral" classes="modal__close" variation="link">
          <Icon name="x-mark" class="dark:text-neutral-50" />
          <span class="sr-only">Close</span>
        </Button>
      </div>
      <div class="modal__body">
        <slot />
      </div>
    </div>
  </div>
</div>

<style>
  /* Overlay (unchanged) */
  .modal {
    @apply fixed inset-0 z-30 hidden h-screen w-screen
    items-center justify-center overflow-hidden
    bg-white/50 lg:backdrop-blur-sm dark:bg-neutral-900/50;
  }
  .modal.open {
    @apply flex;
  }

  /* NEW WRAPPER: creates safe top/bottom space */
  .modal__wrapper {
    @apply flex w-full h-full items-center justify-center p-8 sm:p-12 overflow-auto;
  }

  .modal__popup {
    @apply flex w-80 max-w-full sm:w-[90vw] md:w-[80vw] lg:w-[70vw]
    flex-col overflow-hidden rounded border border-neutral-100 bg-white text-neutral-500
    shadow-xl shadow-neutral-700/5 transition-all duration-500
    dark:border-neutral-800 dark:bg-neutral-900 dark:shadow-neutral-950/50
    opacity-0 translate-y-6
    [.open_&]:translate-y-0 [.open_&]:opacity-100;
  }

  .modal__header {
    @apply flex items-center justify-between gap-6 border-b border-neutral-100 px-6 py-3 text-lg font-medium dark:border-neutral-800;
  }
  .modal__close {
    @apply !rounded-full !px-2.5;
  }
  .modal__title {
    @apply mb-0 truncate text-lg;
  }
  .modal__body {
    @apply p-6;
  }
</style>