---
// Modal (Foxi overlay + scroll lock + your layout)
import Button from './Button.astro'
import { Icon } from 'astro-icon/components'

type Props = {
  id?: string
  title?: string
  classes?: string
}
const { id, title, classes } = Astro.props
---

<div {...(id ? { id } : {})} class:list={['modal', { [`${classes}`]: classes }]}>
  <div class="modal__popup">
    <div class="modal__header">
      {title && (
        <h2 class="modal__title mb-0 truncate text-lg text-neutral-900 dark:text-neutral-50">
          {title}
        </h2>
      )}
      <Button size="sm" style="neutral" classes="modal__close" variation="link">
        <Icon name="x-mark" class="dark:text-neutral-50" />
        <span class="sr-only">Close</span>
      </Button>
    </div>

    <div class="modal__body">
      <slot />
    </div>
  </div>

  <!-- Scroll lock logic -->
  <script is:inline>
    const modal = document.currentScript.closest('.modal');
    const closeBtn = modal.querySelector('.modal__close');
    const toggleScroll = (lock) => {
      document.body.style.overflow = lock ? 'hidden' : '';
    };

    const closeModal = () => {
      modal.classList.remove('open');
      toggleScroll(false);
    };

    closeBtn.addEventListener('click', (e) => {
      e.stopPropagation();
      closeModal();
    });

    modal.addEventListener('click', (e) => {
      if (e.target === modal) closeModal();
    });

    const observer = new MutationObserver(() => {
      toggleScroll(modal.classList.contains('open'));
    });
    observer.observe(modal, { attributes: true, attributeFilter: ['class'] });
  </script>
</div>

<style>
  /* === Foxi overlay === */
  .modal {
    @apply fixed left-0 top-0 z-50 flex h-0 w-full items-center justify-center overflow-hidden bg-white/50 lg:backdrop-blur-sm dark:bg-neutral-900/50 [&.open]:h-full;
  }

  /* === Your modal popup === */
  .modal__popup {
    @apply m-6 flex w-full max-w-5xl flex-col overflow-hidden rounded-none border border-neutral-100 bg-white text-neutral-500 opacity-0 shadow-xl shadow-neutral-700/5 transition-all duration-500 dark:border-neutral-800 dark:bg-neutral-900 dark:shadow-neutral-950/50 
    [.open_&]:translate-y-0 [.open_&]:opacity-100;
  }

  .modal__header {
    @apply flex items-center justify-between gap-6 border-b border-neutral-100 px-6 py-3 text-lg font-medium dark:border-neutral-800;
  }

  .modal__close {
    @apply !rounded-full !px-2.5;
  }

  .modal__title {
    @apply mb-0 truncate text-lg;
  }

  .modal__body {
    @apply p-6 max-h-[80vh] overflow-y-auto;
  }
</style>